#!/usr/bin/env python2
import rospy
import actionlib
from control_msgs.msg import FollowJointTrajectoryAction,FollowJointTrajectoryGoal
import numpy as np
from trajectory_msgs.msg import JointTrajectoryPoint
from robot_functions import *


if __name__ == '__main__':

 rospy.init_node("test_gazebo", disable_signals=True)
 robot_client = actionlib.SimpleActionClient('robot_arm_controller/follow_joint_trajectory', FollowJointTrajectoryAction)
 gripper_client = actionlib.SimpleActionClient('hand_ee_controller/follow_joint_trajectory', FollowJointTrajectoryAction)
 
 print("Waiting for server...")
 robot_client.wait_for_server()
 gripper_client.wait_for_server()
 print("Connected to server")

 # Joint names
 jnames = ['joint_1', 'joint_2', 'joint_3','joint_4', 'joint_5', 'joint_6']
 jnames_gripper = ['joint_7', 'joint_8']

 # gripper
 gripper0 = np.array([0, 0])
 gripper1=np.array([0.05, -0.05])
 gripper2=np.array([0, 0])
 gripper3=np.array([0.05, -0.05])

 # Joint Configuration
 q0 = np.array([0, 0, 0, 0, 0, 0])
 #np.array([0,-1.9, 0.85])
 xd1=np.array([0.0,-1.4,1.695])
 xd2=np.array([0.0,-2.0,1.695])
 xd22=np.array([0,-2,1.85])
 xd3=np.array([1.05,0.9,0.7])
 
 g2 = FollowJointTrajectoryGoal()
 g2.trajectory.joint_names = jnames

 #gripper
 g2_g = FollowJointTrajectoryGoal()
 g2_g.trajectory.joint_names = jnames_gripper
 
 obj1=ikine(xd1, q0)
 T1=fkine(obj1)
 obj2=ikine(xd2, obj1)
 T2=fkine(obj2)
 obj22=ikine(xd22, obj2)
 obj3=ikine(xd3,obj22)
 T3=fkine(obj3)
 
 g2.trajectory.points = [JointTrajectoryPoint(positions=obj1, velocities=[0]*6,time_from_start=rospy.Duration(2.0))]
 print("cosa 1: ")
 print(T1[0:3,-1])
 print(obj1)
 robot_client.send_goal(g2)
 robot_client.wait_for_result()
 g2_g.trajectory.points = [JointTrajectoryPoint(positions=gripper1, velocities=[0]*2,time_from_start=rospy.Duration(2.0))]
 gripper_client.send_goal(g2_g)
 gripper_client.wait_for_result()
 
  
 g2.trajectory.points = [ JointTrajectoryPoint(positions=obj2, velocities=[0]*6,time_from_start=rospy.Duration(2.0))]
 print("cosa 2: ")
 print(T2[0:3,-1])
 print(obj2)
 robot_client.send_goal(g2)
 robot_client.wait_for_result()
 g2_g.trajectory.points = [JointTrajectoryPoint(positions=gripper2, velocities=[0]*2,time_from_start=rospy.Duration(2.0))]
 gripper_client.send_goal(g2_g)
 gripper_client.wait_for_result()
 
 rate = rospy.Rate(10)

 g2.trajectory.points = [ JointTrajectoryPoint(positions=obj22, velocities=[0]*6,time_from_start=rospy.Duration(2.0))]
 print("cosa 2: ")
 print(T2[0:3,-1])
 print(obj22)
 robot_client.send_goal(g2)
 robot_client.wait_for_result()
 
 g2.trajectory.points = [JointTrajectoryPoint(positions=obj3, velocities=[0]*6,time_from_start=rospy.Duration(2.0))]
 print("cosa 3: ")
 print(T3[0:3,-1])
 print(obj3)
 robot_client.send_goal(g2)
 robot_client.wait_for_result()
 g2_g.trajectory.points = [JointTrajectoryPoint(positions=gripper1, velocities=[0]*2,time_from_start=rospy.Duration(2.0))]
 gripper_client.send_goal(g2_g)
 gripper_client.wait_for_result()
 
 robot_client.cancel_goal()
 gripper_client.cancel_goal()


 





